# Skoda Connect API - Development Docker Compose
# Complete development environment with Redis and monitoring

version: '3.8'

services:
  skoda-api:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: skoda-connect-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
      - GCS_BUCKET=${GCS_BUCKET:-skoda-oauth-tokens}
      - CIRCUIT_BREAKER_THRESHOLD=${CIRCUIT_BREAKER_THRESHOLD:-5}
      - CIRCUIT_BREAKER_RECOVERY=${CIRCUIT_BREAKER_RECOVERY:-60}
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - skoda-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: skoda-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - skoda-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: skoda-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
    depends_on:
      - skoda-api
    networks:
      - skoda-network

  # Development tools (comment out for production)
  prometheus:
    image: prom/prometheus:latest
    container_name: skoda-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - skoda-network

  grafana:
    image: grafana/grafana:latest
    container_name: skoda-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - skoda-network

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  skoda-network:
    driver: bridge
    name: skoda-connect-network