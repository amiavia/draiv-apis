name: Test and Validate

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        api: ['bmw']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        cd apis/${{ matrix.api }}
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run linting
      run: |
        cd apis/${{ matrix.api }}
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run type checking
      run: |
        cd apis/${{ matrix.api }}
        mypy src/ --ignore-missing-imports
    
    - name: Run unit tests
      run: |
        cd apis/${{ matrix.api }}
        pytest tests/unit/ -v --cov=src --cov-report=xml --cov-report=term
    
    - name: Run integration tests
      run: |
        cd apis/${{ matrix.api }}
        pytest tests/integration/ -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./apis/${{ matrix.api }}/coverage.xml
        flags: ${{ matrix.api }}-api
        name: ${{ matrix.api }}-coverage
    
    - name: Check code quality
      run: |
        cd apis/${{ matrix.api }}
        pylint src/ --exit-zero
    
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
  
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api: ['bmw']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        cd apis/${{ matrix.api }}
        docker build -t draiv-${{ matrix.api }}-api:test .
    
    - name: Run Docker container test
      run: |
        docker run -d -p 8080:8080 --name test-api \
          -e BMW_OAUTH_BUCKET=test-bucket \
          -e ENVIRONMENT=test \
          draiv-${{ matrix.api }}-api:test
        
        # Wait for container to be ready
        sleep 5
        
        # Test health endpoint
        curl -f http://localhost:8080/health || exit 1
        
        # Clean up
        docker stop test-api
        docker rm test-api